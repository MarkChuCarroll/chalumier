/*
 * Copyright 2024 Mark C. Chu-Carroll
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.goodmath.chalumier.shape

import org.goodmath.chalumier.errors.dAssert
import org.goodmath.chalumier.util.Point
import org.junit.jupiter.api.Assertions.*
import kotlin.test.Test

class TwoDimShapesKtTest {

    @Test
    fun testSquaredCircle() {
        val result = squaredCircle(0.1, 0.1, 4.0)
        val expected = listOf(
            Pair(1.9745042186794857, 0.1402135236913496),
            Pair(1.9699740421383753, 0.23242738560939868),
           Pair(1.9609246026482383, 0.3243078866651124),
           Pair(1.9473777011014446, 0.415633678683666),
           Pair(1.9293659731703883, 0.5061847498328924),
           Pair(1.906932810685296, 0.5957429546510558),
           Pair(1.880132257099508, 0.6840925395783771),
           Pair(1.8490288772940635, 0.7710206627262565),
           Pair(1.8136976020352475, 0.8563179066320267),
           Pair(1.7742235474598134, 0.9397787827639621),
           Pair(1.730701810022752, 1.0212022265611522),
           Pair(1.6832372374016031, 1.1003920818156374),
           Pair(1.6319441759092168, 1.1771575732298982),
           Pair(1.5769461950234696, 1.2513137660112543),
           Pair(1.5183757896975698, 1.32268201139598),
           Pair(1.4563740611681089, 1.3910903770298237),
           Pair(1.391090377029824, 1.4563740611681086),
           Pair(1.3226820113959803, 1.5183757896975696),
           Pair(1.2513137660112543, 1.5769461950234696),
           Pair(1.1771575732298982, 1.6319441759092168),
           Pair(1.1003920818156376, 1.683237237401603),
           Pair(1.0212022265611522, 1.7307018100227518),
           Pair(0.9397787827639622, 1.7742235474598134),
           Pair(0.8563179066320267, 1.8136976020352475),
           Pair(0.7710206627262568, 1.8490288772940633),
           Pair(0.6840925395783772, 1.880132257099508),
           Pair(0.5957429546510559, 1.906932810685296),
           Pair(0.5061847498328923, 1.9293659731703883),
           Pair(0.41563367868366635, 1.9473777011014446),
           Pair(0.3243078866651125, 1.9609246026482383),
           Pair(0.23242738560939874, 1.9699740421383753),
           Pair(0.14021352369134957, 1.9745042186794857),
           Pair(-0.14021352369134932, 1.9745042186794857),
           Pair(-0.23242738560939852, 1.9699740421383753),
           Pair(-0.3243078866651123, 1.9609246026482383),
           Pair(-0.41563367868366613, 1.9473777011014446),
           Pair(-0.5061847498328921, 1.9293659731703883),
           Pair(-0.5957429546510556, 1.906932810685296),
           Pair(-0.6840925395783769, 1.880132257099508),
           Pair(-0.7710206627262566, 1.8490288772940633),
           Pair(-0.8563179066320264, 1.8136976020352475),
           Pair(-0.9397787827639624, 1.7742235474598134),
           Pair(-1.021202226561152, 1.730701810022752),
           Pair(-1.1003920818156372, 1.6832372374016034),
           Pair(-1.1771575732298982, 1.6319441759092168),
           Pair(-1.2513137660112543, 1.5769461950234698),
           Pair(-1.3226820113959799, 1.5183757896975703),
           Pair(-1.391090377029824, 1.4563740611681086),
           Pair(-1.4563740611681084, 1.3910903770298242),
           Pair(-1.5183757896975698, 1.32268201139598),
           Pair(-1.5769461950234696, 1.2513137660112545),
           Pair(-1.6319441759092166, 1.1771575732298984),
           Pair(-1.6832372374016031, 1.1003920818156374),
           Pair(-1.7307018100227518, 1.0212022265611524),
           Pair(-1.7742235474598131, 0.9397787827639628),
           Pair(-1.8136976020352475, 0.8563179066320268),
           Pair(-1.8490288772940633, 0.7710206627262569),
           Pair(-1.880132257099508, 0.6840925395783769),
           Pair(-1.906932810685296, 0.595742954651056),
           Pair(-1.9293659731703883, 0.5061847498328929),
           Pair(-1.9473777011014446, 0.415633678683666),
           Pair(-1.9609246026482383, 0.3243078866651127),
           Pair(-1.9699740421383753, 0.23242738560939927),
           Pair(-1.9745042186794857, 0.14021352369134968),
           Pair(-1.9745042186794857, -0.14021352369134923),
           Pair(-1.9699740421383753, -0.23242738560939882),
           Pair(-1.9609246026482383, -0.3243078866651122),
           Pair(-1.947377701101445, -0.41563367868366563),
           Pair(-1.9293659731703883, -0.5061847498328924),
           Pair(-1.9069328106852963, -0.5957429546510555),
           Pair(-1.8801322570995083, -0.6840925395783765),
           Pair(-1.8490288772940635, -0.7710206627262565),
           Pair(-1.8136976020352478, -0.8563179066320262),
           Pair(-1.7742235474598134, -0.9397787827639623),
           Pair(-1.730701810022752, -1.021202226561152),
           Pair(-1.6832372374016034, -1.100392081815637),
           Pair(-1.6319441759092168, -1.1771575732298982),
           Pair(-1.5769461950234698, -1.251313766011254),
           Pair(-1.5183757896975703, -1.3226820113959799),
           Pair(-1.4563740611681089, -1.3910903770298237),
           Pair(-1.3910903770298242, -1.4563740611681084),
           Pair(-1.3226820113959807, -1.5183757896975694),
           Pair(-1.2513137660112552, -1.576946195023469),
           Pair(-1.1771575732298982, -1.631944175909217),
           Pair(-1.1003920818156376, -1.683237237401603),
           Pair(-1.0212022265611524, -1.7307018100227518),
           Pair(-0.9397787827639629, -1.774223547459813),
           Pair(-0.8563179066320276, -1.813697602035247),
           Pair(-0.7710206627262562, -1.8490288772940635),
           Pair(-0.684092539578377, -1.880132257099508),
           Pair(-0.5957429546510561, -1.906932810685296),
           Pair(-0.506184749832893, -1.9293659731703883),
           Pair(-0.41563367868366696, -1.9473777011014446),
           Pair(-0.32430788666511196, -1.9609246026482388),
           Pair(-0.23242738560939857, -1.9699740421383753),
           Pair(-0.1402135236913498, -1.9745042186794857),
           Pair(0.1402135236913491, -1.9745042186794857),
           Pair(0.23242738560939785, -1.9699740421383753),
           Pair(0.3243078866651113, -1.9609246026482388),
           Pair(0.41563367868366624, -1.9473777011014446),
           Pair(0.5061847498328923, -1.9293659731703883),
           Pair(0.5957429546510554, -1.9069328106852963),
           Pair(0.6840925395783763, -1.8801322570995083),
           Pair(0.7710206627262555, -1.8490288772940637),
           Pair(0.856317906632027, -1.8136976020352473),
           Pair(0.9397787827639622, -1.7742235474598134),
           Pair(1.0212022265611518, -1.730701810022752),
           Pair(1.100392081815637, -1.6832372374016034),
           Pair(1.1771575732298976, -1.6319441759092173),
           Pair(1.2513137660112548, -1.5769461950234693),
           Pair(1.32268201139598, -1.5183757896975698),
           Pair(1.3910903770298237, -1.4563740611681089),
           Pair(1.4563740611681082, -1.3910903770298244),
           Pair(1.5183757896975691, -1.3226820113959807),
           Pair(1.576946195023469, -1.2513137660112554),
           Pair(1.6319441759092168, -1.1771575732298982),
           Pair(1.683237237401603, -1.1003920818156376),
           Pair(1.7307018100227516, -1.0212022265611527),
           Pair(1.774223547459813, -0.939778782763963),
           Pair(1.8136976020352469, -0.8563179066320277),
           Pair(1.8490288772940635, -0.7710206627262564),
           Pair(1.880132257099508, -0.6840925395783771),
           Pair(1.906932810685296, -0.5957429546510562),
           Pair(1.9293659731703883, -0.5061847498328931),
           Pair(1.9473777011014446, -0.4156336786836671),
           Pair(1.9609246026482383, -0.3243078866651121),
           Pair(1.9699740421383753, -0.23242738560939866),
           Pair(1.9745042186794857, -0.1402135236913499))

       assertEquals(expected.size, result.loopValues.size)
       for (i in 0 until expected.size) {
          assertEquals(expected[i].first, result.loopValues[i].x, 1e-5)
          assertEquals(expected[i].second, result.loopValues[i].y, 1e-5)
       }

    }

   @Test
   fun testCentroid() {
      val x = rectangle(Point(10.0, 20.0), Point(40.0, 50.0))
      assertEquals(Point(25.0, 35.0), x.centroid)
   }

}
